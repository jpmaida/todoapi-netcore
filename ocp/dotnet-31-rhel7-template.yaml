apiVersion: v1
kind: Template
metadata:
  name: dotnet-31-rhel7-template
  annotations:
    openshift.io/display-name: "Template Dotnet 3.1 RHEL 7"
    description: >-
      Template Dotnet 3.1 RHEL 7


      Image used: https://catalog.redhat.com/software/containers/dotnet/dotnet-31-rhel7/5ddc18f6dd19c71643b57964?container-tabs=gti&gti-tabs=registry-tokens
      
      API creation steps: https://docs.microsoft.com/en-us/aspnet/core/tutorials/first-web-api?view=aspnetcore-3.1&tabs=visual-studio
      
      Template objects: DC, Service and Route.
    tags: ".netcore, dotnet31"
    openshift.io/provider-display-name: "Jo√£o Paulo Maida"
    openshift.io/documentation-url: ""
objects:
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      labels:
        app: "${APPLICATION_NAME}"
      name: "${APPLICATION_NAME}"
    spec:
      replicas: "${{REPLICAS_COUNT}}"
      revisionHistoryLimit: 10
      selector:
        app: "${APPLICATION_NAME}"
        deploymentconfig: "${APPLICATION_NAME}"
      strategy:
        activeDeadlineSeconds: 21600
        resources: {}
        rollingParams:
          intervalSeconds: 1
          maxSurge: 25%
          maxUnavailable: 25%
          timeoutSeconds: 600
          updatePeriodSeconds: 1
        type: Rolling
      template:
        metadata:
          labels:
            app: "${APPLICATION_NAME}"
            deploymentconfig: "${APPLICATION_NAME}"
        spec:
          containers:
          - image: "docker-registry.default.svc:5000/${PROJECT_NAME}/${APPLICATION_NAME}@sha256:050908ac81f73e7bf31db2ed2a1d546303318236d06597f3db0df922276c2e08"
            imagePullPolicy: Always
            name: "${APPLICATION_NAME}"
            ports:
            - containerPort: 8080
              protocol: TCP
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
      test: false
      triggers:
      - type: ConfigChange
      - imageChangeParams:
          automatic: true
          containerNames:
          - "${APPLICATION_NAME}"
          from:
            kind: ImageStreamTag
            name: todo-api:latest
            namespace: netcore-s2i-poc
        type: ImageChange
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: "${APPLICATION_NAME}"
      name: "${APPLICATION_NAME}"
    spec:
      ports:
      - name: 8080-tcp
        port: 8080
        protocol: TCP
        targetPort: 8080
      selector:
        app: todo-api
        deploymentconfig: todo-api
      sessionAffinity: None
      type: ClusterIP
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      labels:
        app: "${APPLICATION_NAME}"
      name: "${APPLICATION_NAME}"
    spec:
      host: "${APPLICATION_NAME}-${PROJECT_NAME}.${HOSTNAME}"
      port:
        targetPort: 8080-tcp
      to:
        kind: Service
        name: todo-api
        weight: 100
      wildcardPolicy: None
parameters:
  - name: APPLICATION_NAME
    displayName: Application Name
  - name: PROJECT_NAME
    displayName: Project Name
  - name: REPLICAS_COUNT
    displayName: Number of replicas
    value: "1"
  - name: HOSTNAME
    displayName: Cluster's hostname
